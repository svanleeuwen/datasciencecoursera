getwd
getwd()
setwd
setwd("C:/Users/Spencer/Documents/Data Science")
getwd()
x <- c(4, T)
x.class
class(x)
x
x <- c(1,3,5)
y <- c(3,2,10)
cbind(x,y)
x<-1:4
y<-3:4
x + y
y<2:3
y<-2:3
x + y
y + x
x<- c(3,5,1,10,12,6)
x[x<=5] <- 0
x
read.csv("hw1_data.csv")
file <- read.csv("hw1_data.csv")
file
head(file)
tail(file)
tail(file, 2)
read.csv(file, 47)
reat.csv
read.csv
fiel
file
file[47]
file[[47]]
file[47, "Ozone"]
file[47,]
is.na(file[,"Ozone"])
bad <- is.na(file[,"Ozone"])
file[bad]
file[,bad]
file[bad,]
nrow(file)
nrow(file[bad,])
mean(file[!bad,"Ozone"])
mean(file[,"Ozone"])
file[,"Ozone"] > 31 && file[,"Temp"] > 90
file[,"Ozone"] > 31 & file[,"Temp"] > 90
bad <- file[,"Ozone"] > 31 & file[,"Temp"] > 90
mean(file[!bad,"Solar.R"])
mean(file[bad,"Solar.R"])
bad <- file[,"Ozone"] > 31 & file[,"Temp"] > 90 & !is.na(file[,"Solar.R"])
mean(file[bad,"Solar.R"])
mean(file[!bad,"Solar.R"])
file[!bad,"Solar.R"]
file[,"Ozone"] > 31 & file[,"Temp"] > 90 & !is.na(file[,"Solar.R"])
file[,"Ozone"] > 31 & file[,"Temp"] > 90
good <- complete.cases(file[,"Ozone"], file[,"Temp"], file[,"Solar.R"])
bad <- file[good, "Ozone"] > 31 & file[good, "Temp"] > 90
mean(file[!bad, "Solar.R"])
file[!bad, "Solar.R"]
bad
file[good,][!bad,"Solar.R"]
mean(file[good,,drop=F][!bad,"Solar.R"])
bad <- file[good, "Ozone"] >= 31 & file[good, "Temp"] >= 90
mean(file[good,,drop=F][!bad,"Solar.R"])
mean(file[good,,drop=F][bad,"Solar.R"])
bad <- file[good, "Ozone"] > 31 & file[good, "Temp"] > 90
mean(file[good,,drop=F][bad,"Solar.R"])
good <- file[,"Month"] == 6
good
bad <- is.na(file[,"Temp"])
mean(file[!bad & good,"Temp"])
max(file[file[,"Month"] == 5, "Ozone"])
max(file[file[,"Month"] == 5 & !is.na(file[,"Ozone"]), "Ozone"])
install.packages("swirl")
library(swirl)
swirl()
5+7
x <- 5+7
x
y <- x-3
y
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z * 2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z * 2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
play()
ls()
nxt()
list.files()
?list.files()
?list.files
args(list.files)
old.dir <- getwd()
mkdir("testdir")
dir.create("testdir")
cd("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
list.files()
list.files()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
play()
file.path("mytest3.R")
path.expand(file.path("mytest3.R"))
path.expand("mytest3.R")
getwd()
file.path(getwd(), "mytest3.R")
nxt()
file.path(getwd(), "mytest3.R")
file.path("mytest3.R")
dir.create("testdir2")
dir.create("testdir2/testdir3")
dir.create("testdir2/testdir3", recursive=T)
play()
dir.remove("testdir2/")
dir.delete("testdir2/")
unlink("testdir2/", recursive=T)
ls()
files.show()
list.files()
unlink("testdir2")
list.files()
unlink("testdir2", recursive=T)
list.files()
nxt()
dir.create("testdir2/testdir3", recursive=T)
play()
list.files9)
list.files())
list.files()
setwd("testdir2/")
list.files()
setwd("testdir3")
list.files()
setwd("../..")
unlink("testdir2", recursive=T)
list.files()
nxt()
dir.create("testdir2\testdir3", recursive=TRUE)
dir.create("testdir2/testdir3", recursive=TRUE)
unlink("testdir2", recursive=T)
unlink("testdir2", recursive=TRUE)
setwd("old.dir")
setwd(old.dir)
play()
list.files()
nxt()
unlink("testdir", recursive = TRUE)
1:20
pi:10
15:1
?`:`
seq(1,20)
seq(0,10,by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times=40)
rep(c(0,1,2), times=10)
rep(c(0,1,2), each=10)
menu()
info()
main()
main()
c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Spencer")
my_name
paste(myname, collapse = " ")
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X", "Y", "Z"), sep="")
paste(LETTERS, 1:4, sep="-")
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
skip()
x<-c(44,NA,5,NA)
x * 3
y<-rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
play()
ls()
y
z
nxt()
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x > 0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo=11, bar=2, norf=NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
swirl()
library("swirl")
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4, 5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
play()
my_data
rnames <- c("a", "b", "c", "d")
rownames(my_data) <- rnames
my_data
rnames <- c("e", "f")
rownames(my_data) <- rnames
nxt()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
!(5 != 7)
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
play()
isTRUE(NA)
isTRUE(3)
nxt()
identical('twins','twins')
play()
class('twins')
class("twins")
identical('twins',"twins")
nxt()
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
head(flags)
dim(flags)
play()
viewinfo(flags)
viewinfo()
?viewinfo
nxt()
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
play()
cls_vect
dim(cls_vect)
nxt()
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique())
sapply(flags, unique
)
lapply(unique_vals, function(elem) elem[2])
play()
str(flags)
summary(flags)
nxt()
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animage, flags$landmass, mean)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace=TRUE)
sample(1:6, 4, replace=TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
flips <-sample(c(0,1), 100, replacement=TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace=TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size=100, prob=0.7)
flips2 <= rbinom(100, size=1, prob=0.7)
flips2 <- rbinom(100, size=1, prob=0.7)
flips2
sum(flips2)
?rnorm
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
?strptime
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
data(cars)
?cars
head(cars)
plot(cars)
?plot
plot(x=cars$speed, y=cars$dist)
plot(x=cars$dist, y=cars$speed)
plot(x=cars$speed, y=cars$dist, xlab="Speed")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, ylab="Stopping Distance")
plot(x=cars$speed, y=cars$dist, xlab="Speed", ylab="Stopping Distance")
plot(cars, title="My Plot")
plot(cars, main="My Plot")
plot(cars, sub="My Plot Subtitle")
?par
plot(cars, col=2)
plot(cars, xlim=c(10, 15))
?points
plot(cars, pch=2)
data(mtcars)
play()
mtcars
nrows(mtcars)
nrow(mtcars)
names(mtcars)
cnames(mtcars)
nxt()
?boxplot
boxplot(mpg ~ cyl, mtcars)
hist(mtcars$mpg)
